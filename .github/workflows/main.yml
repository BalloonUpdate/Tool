name: Release Build

on:
  push:
    tags: 
      - "v*"
  workflow_dispatch:
    inputs:
      version_name:
        description: 'a version name'
        required: false
        default: '0.0.0'

jobs:
  build:
    runs-on: windows-2019
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      
      - name: Load Cache
        uses: actions/cache@v2
        with:
          path: ./venv
          key: ${{ hashFiles('**/requirements.txt') }}

      - name: Build
        env:
          PROJECT_VERSION: ${{ github.event.inputs.version_name }}
        run: |
          tzutil /s "China Standard Time"
          python -m pip install wheel setuptools virtualenv
          python -m virtualenv venv
          venv\Scripts\activate
          pip install -r requirements.txt
          pyinstaller build.spec
          copy config.exam.yml dist\config.yml

      - name: Print Hashes
        shell: "python3 {0}"
        run: |
          import os
          import hashlib
          directory = 'dist'
          def hash(fileToBeHashed, hashobj):
              with open(fileToBeHashed, 'rb') as f:
                  hashobj.update(f.read())
                  return hashobj.hexdigest()
          def show_hash(f, hashobj, indent='    '):
              print(hashobj.name + ': ' + hash(f, hashobj) + '\n')
          for f in os.listdir(directory):
              sf = os.path.join(directory, f)
              if os.path.isfile(sf):
                  print('Hashes for ' + sf)
                  show_hash(sf, hashlib.md5())
                  show_hash(sf, hashlib.sha1())
                  show_hash(sf, hashlib.sha256())


      - name: Upload To Github Release
        uses: xresloader/upload-to-github-release@98857380fc282f8075a62c6af230fe92bd93aff8
        env:
          GITHUB_TOKEN: ${{ secrets.TOKEN }}
        with:
          file: dist/*
          draft: false
          tags: true
